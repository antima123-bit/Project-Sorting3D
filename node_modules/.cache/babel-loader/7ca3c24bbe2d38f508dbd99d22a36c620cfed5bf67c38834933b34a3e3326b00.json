{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\DS\\\\Downloads\\\\Final\\\\src\\\\components\\\\SortingVisualizer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, Container, Paper, Typography, Button, Slider, Select, MenuItem, AppBar, Toolbar } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { bubbleSort, selectionSort, insertionSort, mergeSort, quickSort } from '../algorithms/sortingAlgorithms';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledContainer = styled(Container)(({\n  theme\n}) => ({\n  marginTop: theme.spacing(4),\n  marginBottom: theme.spacing(4)\n}));\n_c = StyledContainer;\nconst ControlPanel = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  display: 'flex',\n  gap: theme.spacing(2),\n  alignItems: 'center'\n}));\n_c2 = ControlPanel;\nconst ArrayContainer = styled(Box)(({\n  theme\n}) => ({\n  height: '400px',\n  display: 'flex',\n  alignItems: 'flex-end',\n  gap: '3px',\n  marginRight: '280px' // Add space for complexity info\n}));\n_c3 = ArrayContainer;\nconst ArrayBar = styled(Box)(({\n  theme\n}) => ({\n  width: '23px',\n  // Increased from 15px to 23px\n  backgroundColor: theme.palette.primary.main,\n  transition: 'height 0.1s ease',\n  '&.comparing': {\n    backgroundColor: theme.palette.secondary.main\n  },\n  '&.sorted': {\n    backgroundColor: theme.palette.success.main\n  }\n}));\n_c4 = ArrayBar;\nconst StepsDisplay = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  marginTop: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  maxHeight: '200px',\n  overflowY: 'auto',\n  '& .step': {\n    marginBottom: theme.spacing(1),\n    padding: theme.spacing(1),\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: theme.palette.background.default\n  },\n  '& .current-step': {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.primary.contrastText\n  }\n}));\n_c5 = StepsDisplay;\nconst ComplexityInfo = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  position: 'absolute',\n  right: theme.spacing(2),\n  top: '50%',\n  transform: 'translateY(-50%)',\n  width: '250px',\n  backgroundColor: theme.palette.background.paper,\n  boxShadow: theme.shadows[4],\n  '& .complexity-row': {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(1),\n    padding: theme.spacing(1),\n    borderRadius: theme.shape.borderRadius,\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}));\n_c6 = ComplexityInfo;\nconst ALGORITHMS = {\n  bubble: {\n    name: 'Bubble Sort',\n    function: bubbleSort,\n    complexity: {\n      best: 'O(n)',\n      average: 'O(n²)',\n      worst: 'O(n²)',\n      space: 'O(1)',\n      stable: 'Yes'\n    }\n  },\n  selection: {\n    name: 'Selection Sort',\n    function: selectionSort,\n    complexity: {\n      best: 'O(n²)',\n      average: 'O(n²)',\n      worst: 'O(n²)',\n      space: 'O(1)',\n      stable: 'No'\n    }\n  },\n  insertion: {\n    name: 'Insertion Sort',\n    function: insertionSort,\n    complexity: {\n      best: 'O(n)',\n      average: 'O(n²)',\n      worst: 'O(n²)',\n      space: 'O(1)',\n      stable: 'Yes'\n    }\n  },\n  merge: {\n    name: 'Merge Sort',\n    function: mergeSort,\n    complexity: {\n      best: 'O(n log n)',\n      average: 'O(n log n)',\n      worst: 'O(n log n)',\n      space: 'O(n)',\n      stable: 'Yes'\n    }\n  },\n  quick: {\n    name: 'Quick Sort',\n    function: quickSort,\n    complexity: {\n      best: 'O(n log n)',\n      average: 'O(n log n)',\n      worst: 'O(n²)',\n      space: 'O(log n)',\n      stable: 'No'\n    }\n  }\n};\nfunction SortingVisualizer({\n  audioManager\n}) {\n  _s();\n  const [array, setArray] = useState([]);\n  const [arraySize, setArraySize] = useState(50);\n  const [speed, setSpeed] = useState(50);\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState('bubble');\n  const [isSorting, setIsSorting] = useState(false);\n  const [comparingIndices, setComparingIndices] = useState([]);\n  const [sortedIndices, setSortedIndices] = useState([]);\n  const [steps, setSteps] = useState([]);\n  const [currentStepIndex, setCurrentStepIndex] = useState(-1);\n  const stopSortingRef = useRef(false);\n  useEffect(() => {\n    generateNewArray();\n  }, [arraySize]);\n  const generateNewArray = () => {\n    const newArray = Array.from({\n      length: arraySize\n    }, () => Math.floor(Math.random() * 300) + 5);\n    setArray(newArray);\n    setSortedIndices([]);\n    setComparingIndices([]);\n    setSteps([]);\n    setCurrentStepIndex(-1);\n  };\n  const sleep = ms => new Promise(resolve => {\n    if (stopSortingRef.current) {\n      throw new Error('Sorting stopped');\n    }\n    return setTimeout(resolve, ms);\n  });\n  const addStep = (description, currentArray, comparing = [], sorted = []) => {\n    setSteps(prev => [...prev, {\n      description,\n      array: [...currentArray],\n      comparing,\n      sorted\n    }]);\n    setCurrentStepIndex(prev => prev + 1);\n  };\n  const stopSorting = () => {\n    stopSortingRef.current = true;\n  };\n  const startSorting = async () => {\n    if (isSorting) return;\n    setIsSorting(true);\n    setSortedIndices([]);\n    setComparingIndices([]);\n    setSteps([]);\n    setCurrentStepIndex(-1);\n    stopSortingRef.current = false;\n    const workingArray = [...array];\n    addStep('Initial array configuration', workingArray);\n    const compare = async (i, j) => {\n      if (stopSortingRef.current) throw new Error('Sorting stopped');\n      setComparingIndices([i, j]);\n      audioManager.playNote(workingArray[i]);\n      addStep(`Comparing elements: ${workingArray[i]} and ${workingArray[j]}`, workingArray, [i, j], [...sortedIndices]);\n      await sleep(150 - speed);\n    };\n    const swap = async (arr, i, j) => {\n      if (stopSortingRef.current) throw new Error('Sorting stopped');\n      const temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n      setArray([...arr]);\n      audioManager.playNote(arr[i]);\n      addStep(`Swapping elements: ${arr[j]} and ${arr[i]}`, arr, [i, j], [...sortedIndices]);\n    };\n    const markSorted = index => {\n      setSortedIndices(prev => {\n        const newSorted = [...prev, index];\n        addStep(`Element ${workingArray[index]} is now in its sorted position`, workingArray, [], newSorted);\n        return newSorted;\n      });\n    };\n    try {\n      await ALGORITHMS[selectedAlgorithm].function(workingArray, compare, swap, markSorted, setArray);\n      addStep('Array is now fully sorted!', workingArray, [], [...Array(array.length).keys()]);\n    } catch (error) {\n      if (error.message !== 'Sorting stopped') {\n        console.error('Sorting error:', error);\n      }\n    }\n    setIsSorting(false);\n    setComparingIndices([]);\n    if (!stopSortingRef.current) {\n      setSortedIndices([...Array(array.length).keys()]);\n    }\n    stopSortingRef.current = false;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"Sorting Visualizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ControlPanel, {\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            value: selectedAlgorithm,\n            onChange: e => setSelectedAlgorithm(e.target.value),\n            disabled: isSorting,\n            size: \"small\",\n            children: Object.entries(ALGORITHMS).map(([key, value]) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: key,\n              children: value.name\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: 200\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              children: \"Array Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              value: arraySize,\n              onChange: (e, newValue) => setArraySize(newValue),\n              min: 5,\n              max: 100,\n              disabled: isSorting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: 200\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              children: \"Speed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              value: speed,\n              onChange: (e, newValue) => setSpeed(newValue),\n              min: 1,\n              max: 100,\n              disabled: isSorting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: generateNewArray,\n            disabled: isSorting,\n            children: \"Generate New Array\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: startSorting,\n            disabled: isSorting,\n            children: \"Start Sorting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"error\",\n            onClick: stopSorting,\n            disabled: !isSorting,\n            children: \"Stop Sorting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ArrayContainer, {\n          children: array.map((value, idx) => /*#__PURE__*/_jsxDEV(ArrayBar, {\n            sx: {\n              height: `${value}px`\n            },\n            className: sortedIndices.includes(idx) ? 'sorted' : comparingIndices.includes(idx) ? 'comparing' : ''\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ComplexityInfo, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: [ALGORITHMS[selectedAlgorithm].name, \" Complexity\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"complexity-row\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"Best Case:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"primary\",\n              children: ALGORITHMS[selectedAlgorithm].complexity.best\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"complexity-row\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"Average Case:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"primary\",\n              children: ALGORITHMS[selectedAlgorithm].complexity.average\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"complexity-row\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"Worst Case:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"error\",\n              children: ALGORITHMS[selectedAlgorithm].complexity.worst\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"complexity-row\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"Space Complexity:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"primary\",\n              children: ALGORITHMS[selectedAlgorithm].complexity.space\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"complexity-row\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"Stable:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: ALGORITHMS[selectedAlgorithm].complexity.stable === 'Yes' ? 'success' : 'error',\n              children: ALGORITHMS[selectedAlgorithm].complexity.stable\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StepsDisplay, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Sorting Steps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), steps.map((step, index) => /*#__PURE__*/_jsxDEV(Box, {\n            className: `step ${index === currentStepIndex ? 'current-step' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Step \", index + 1, \": \", step.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          mt: 2,\n          textAlign: 'center'\n        },\n        children: [\"Selected Algorithm: \", ALGORITHMS[selectedAlgorithm].name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SortingVisualizer, \"7uBGCStk+maytftH+C7J8TYIgho=\");\n_c7 = SortingVisualizer;\nexport default SortingVisualizer;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"ControlPanel\");\n$RefreshReg$(_c3, \"ArrayContainer\");\n$RefreshReg$(_c4, \"ArrayBar\");\n$RefreshReg$(_c5, \"StepsDisplay\");\n$RefreshReg$(_c6, \"ComplexityInfo\");\n$RefreshReg$(_c7, \"SortingVisualizer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Container","Paper","Typography","Button","Slider","Select","MenuItem","AppBar","Toolbar","styled","bubbleSort","selectionSort","insertionSort","mergeSort","quickSort","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledContainer","theme","marginTop","spacing","marginBottom","_c","ControlPanel","padding","display","gap","alignItems","_c2","ArrayContainer","height","marginRight","_c3","ArrayBar","width","backgroundColor","palette","primary","main","transition","secondary","success","_c4","StepsDisplay","maxHeight","overflowY","borderRadius","shape","background","default","light","color","contrastText","_c5","ComplexityInfo","position","right","top","transform","paper","boxShadow","shadows","justifyContent","action","hover","_c6","ALGORITHMS","bubble","name","function","complexity","best","average","worst","space","stable","selection","insertion","merge","quick","SortingVisualizer","audioManager","_s","array","setArray","arraySize","setArraySize","speed","setSpeed","selectedAlgorithm","setSelectedAlgorithm","isSorting","setIsSorting","comparingIndices","setComparingIndices","sortedIndices","setSortedIndices","steps","setSteps","currentStepIndex","setCurrentStepIndex","stopSortingRef","generateNewArray","newArray","Array","from","length","Math","floor","random","sleep","ms","Promise","resolve","current","Error","setTimeout","addStep","description","currentArray","comparing","sorted","prev","stopSorting","startSorting","workingArray","compare","i","j","playNote","swap","arr","temp","markSorted","index","newSorted","keys","error","message","console","children","variant","component","sx","flexGrow","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","disabled","size","Object","entries","map","key","gutterBottom","newValue","min","max","onClick","idx","className","includes","step","mt","textAlign","_c7","$RefreshReg$"],"sources":["C:/Users/hp/DS/Downloads/Final/src/components/SortingVisualizer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Box, Container, Paper, Typography, Button, Slider, Select, MenuItem, AppBar, Toolbar } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { bubbleSort, selectionSort, insertionSort, mergeSort, quickSort } from '../algorithms/sortingAlgorithms';\n\nconst StyledContainer = styled(Container)(({ theme }) => ({\n  marginTop: theme.spacing(4),\n  marginBottom: theme.spacing(4),\n}));\n\nconst ControlPanel = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  display: 'flex',\n  gap: theme.spacing(2),\n  alignItems: 'center',\n}));\n\nconst ArrayContainer = styled(Box)(({ theme }) => ({\n  height: '400px',\n  display: 'flex',\n  alignItems: 'flex-end',\n  gap: '3px',\n  marginRight: '280px', // Add space for complexity info\n}));\n\nconst ArrayBar = styled(Box)(({ theme }) => ({\n  width: '23px', // Increased from 15px to 23px\n  backgroundColor: theme.palette.primary.main,\n  transition: 'height 0.1s ease',\n  '&.comparing': {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  '&.sorted': {\n    backgroundColor: theme.palette.success.main,\n  },\n}));\n\nconst StepsDisplay = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(2),\n  marginTop: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  maxHeight: '200px',\n  overflowY: 'auto',\n  '& .step': {\n    marginBottom: theme.spacing(1),\n    padding: theme.spacing(1),\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: theme.palette.background.default,\n  },\n  '& .current-step': {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.primary.contrastText,\n  }\n}));\n\nconst ComplexityInfo = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(2),\n  position: 'absolute',\n  right: theme.spacing(2),\n  top: '50%',\n  transform: 'translateY(-50%)',\n  width: '250px',\n  backgroundColor: theme.palette.background.paper,\n  boxShadow: theme.shadows[4],\n  '& .complexity-row': {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(1),\n    padding: theme.spacing(1),\n    borderRadius: theme.shape.borderRadius,\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    }\n  }\n}));\n\nconst ALGORITHMS = {\n  bubble: {\n    name: 'Bubble Sort',\n    function: bubbleSort,\n    complexity: {\n      best: 'O(n)',\n      average: 'O(n²)',\n      worst: 'O(n²)',\n      space: 'O(1)',\n      stable: 'Yes'\n    }\n  },\n  selection: {\n    name: 'Selection Sort',\n    function: selectionSort,\n    complexity: {\n      best: 'O(n²)',\n      average: 'O(n²)',\n      worst: 'O(n²)',\n      space: 'O(1)',\n      stable: 'No'\n    }\n  },\n  insertion: {\n    name: 'Insertion Sort',\n    function: insertionSort,\n    complexity: {\n      best: 'O(n)',\n      average: 'O(n²)',\n      worst: 'O(n²)',\n      space: 'O(1)',\n      stable: 'Yes'\n    }\n  },\n  merge: {\n    name: 'Merge Sort',\n    function: mergeSort,\n    complexity: {\n      best: 'O(n log n)',\n      average: 'O(n log n)',\n      worst: 'O(n log n)',\n      space: 'O(n)',\n      stable: 'Yes'\n    }\n  },\n  quick: {\n    name: 'Quick Sort',\n    function: quickSort,\n    complexity: {\n      best: 'O(n log n)',\n      average: 'O(n log n)',\n      worst: 'O(n²)',\n      space: 'O(log n)',\n      stable: 'No'\n    }\n  }\n};\n\nfunction SortingVisualizer({ audioManager }) {\n  const [array, setArray] = useState([]);\n  const [arraySize, setArraySize] = useState(50);\n  const [speed, setSpeed] = useState(50);\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState('bubble');\n  const [isSorting, setIsSorting] = useState(false);\n  const [comparingIndices, setComparingIndices] = useState([]);\n  const [sortedIndices, setSortedIndices] = useState([]);\n  const [steps, setSteps] = useState([]);\n  const [currentStepIndex, setCurrentStepIndex] = useState(-1);\n  const stopSortingRef = useRef(false);\n\n  useEffect(() => {\n    generateNewArray();\n  }, [arraySize]);\n\n  const generateNewArray = () => {\n    const newArray = Array.from({ length: arraySize }, () =>\n      Math.floor(Math.random() * 300) + 5\n    );\n    setArray(newArray);\n    setSortedIndices([]);\n    setComparingIndices([]);\n    setSteps([]);\n    setCurrentStepIndex(-1);\n  };\n\n  const sleep = (ms) => new Promise((resolve) => {\n    if (stopSortingRef.current) {\n      throw new Error('Sorting stopped');\n    }\n    return setTimeout(resolve, ms);\n  });\n\n  const addStep = (description, currentArray, comparing = [], sorted = []) => {\n    setSteps(prev => [...prev, {\n      description,\n      array: [...currentArray],\n      comparing,\n      sorted\n    }]);\n    setCurrentStepIndex(prev => prev + 1);\n  };\n\n  const stopSorting = () => {\n    stopSortingRef.current = true;\n  };\n\n  const startSorting = async () => {\n    if (isSorting) return;\n    setIsSorting(true);\n    setSortedIndices([]);\n    setComparingIndices([]);\n    setSteps([]);\n    setCurrentStepIndex(-1);\n    stopSortingRef.current = false;\n\n    const workingArray = [...array];\n    addStep('Initial array configuration', workingArray);\n\n    const compare = async (i, j) => {\n      if (stopSortingRef.current) throw new Error('Sorting stopped');\n      setComparingIndices([i, j]);\n      audioManager.playNote(workingArray[i]);\n      addStep(\n        `Comparing elements: ${workingArray[i]} and ${workingArray[j]}`,\n        workingArray,\n        [i, j],\n        [...sortedIndices]\n      );\n      await sleep(150 - speed);\n    };\n\n    const swap = async (arr, i, j) => {\n      if (stopSortingRef.current) throw new Error('Sorting stopped');\n      const temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n      setArray([...arr]);\n      audioManager.playNote(arr[i]);\n      addStep(\n        `Swapping elements: ${arr[j]} and ${arr[i]}`,\n        arr,\n        [i, j],\n        [...sortedIndices]\n      );\n    };\n\n    const markSorted = (index) => {\n      setSortedIndices(prev => {\n        const newSorted = [...prev, index];\n        addStep(\n          `Element ${workingArray[index]} is now in its sorted position`,\n          workingArray,\n          [],\n          newSorted\n        );\n        return newSorted;\n      });\n    };\n\n    try {\n      await ALGORITHMS[selectedAlgorithm].function(\n        workingArray,\n        compare,\n        swap,\n        markSorted,\n        setArray\n      );\n      addStep('Array is now fully sorted!', workingArray, [], [...Array(array.length).keys()]);\n    } catch (error) {\n      if (error.message !== 'Sorting stopped') {\n        console.error('Sorting error:', error);\n      }\n    }\n\n    setIsSorting(false);\n    setComparingIndices([]);\n    if (!stopSortingRef.current) {\n      setSortedIndices([...Array(array.length).keys()]);\n    }\n    stopSortingRef.current = false;\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Sorting Visualizer\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <StyledContainer>\n        <Box sx={{ position: 'relative' }}>\n          <ControlPanel>\n            <Select\n              value={selectedAlgorithm}\n              onChange={(e) => setSelectedAlgorithm(e.target.value)}\n              disabled={isSorting}\n              size=\"small\"\n            >\n              {Object.entries(ALGORITHMS).map(([key, value]) => (\n                <MenuItem key={key} value={key}>\n                  {value.name}\n                </MenuItem>\n              ))}\n            </Select>\n            \n            <Box sx={{ width: 200 }}>\n              <Typography gutterBottom>Array Size</Typography>\n              <Slider\n                value={arraySize}\n                onChange={(e, newValue) => setArraySize(newValue)}\n                min={5}\n                max={100}\n                disabled={isSorting}\n              />\n            </Box>\n\n            <Box sx={{ width: 200 }}>\n              <Typography gutterBottom>Speed</Typography>\n              <Slider\n                value={speed}\n                onChange={(e, newValue) => setSpeed(newValue)}\n                min={1}\n                max={100}\n                disabled={isSorting}\n              />\n            </Box>\n\n            <Button\n              variant=\"contained\"\n              onClick={generateNewArray}\n              disabled={isSorting}\n            >\n              Generate New Array\n            </Button>\n\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={startSorting}\n              disabled={isSorting}\n            >\n              Start Sorting\n            </Button>\n\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              onClick={stopSorting}\n              disabled={!isSorting}\n            >\n              Stop Sorting\n            </Button>\n          </ControlPanel>\n\n          <ArrayContainer>\n            {array.map((value, idx) => (\n              <ArrayBar\n                key={idx}\n                sx={{\n                  height: `${value}px`,\n                }}\n                className={\n                  sortedIndices.includes(idx)\n                    ? 'sorted'\n                    : comparingIndices.includes(idx)\n                    ? 'comparing'\n                    : ''\n                }\n              />\n            ))}\n          </ArrayContainer>\n\n          <ComplexityInfo>\n            <Typography variant=\"h6\" gutterBottom>\n              {ALGORITHMS[selectedAlgorithm].name} Complexity\n            </Typography>\n            <Box className=\"complexity-row\">\n              <Typography variant=\"body2\">Best Case:</Typography>\n              <Typography variant=\"body2\" color=\"primary\">\n                {ALGORITHMS[selectedAlgorithm].complexity.best}\n              </Typography>\n            </Box>\n            <Box className=\"complexity-row\">\n              <Typography variant=\"body2\">Average Case:</Typography>\n              <Typography variant=\"body2\" color=\"primary\">\n                {ALGORITHMS[selectedAlgorithm].complexity.average}\n              </Typography>\n            </Box>\n            <Box className=\"complexity-row\">\n              <Typography variant=\"body2\">Worst Case:</Typography>\n              <Typography variant=\"body2\" color=\"error\">\n                {ALGORITHMS[selectedAlgorithm].complexity.worst}\n              </Typography>\n            </Box>\n            <Box className=\"complexity-row\">\n              <Typography variant=\"body2\">Space Complexity:</Typography>\n              <Typography variant=\"body2\" color=\"primary\">\n                {ALGORITHMS[selectedAlgorithm].complexity.space}\n              </Typography>\n            </Box>\n            <Box className=\"complexity-row\">\n              <Typography variant=\"body2\">Stable:</Typography>\n              <Typography variant=\"body2\" color={ALGORITHMS[selectedAlgorithm].complexity.stable === 'Yes' ? 'success' : 'error'}>\n                {ALGORITHMS[selectedAlgorithm].complexity.stable}\n              </Typography>\n            </Box>\n          </ComplexityInfo>\n\n          <StepsDisplay>\n            <Typography variant=\"h6\" gutterBottom>\n              Sorting Steps\n            </Typography>\n            {steps.map((step, index) => (\n              <Box\n                key={index}\n                className={`step ${index === currentStepIndex ? 'current-step' : ''}`}\n              >\n                <Typography variant=\"body2\">\n                  Step {index + 1}: {step.description}\n                </Typography>\n              </Box>\n            ))}\n          </StepsDisplay>\n        </Box>\n\n        <Typography variant=\"body2\" sx={{ mt: 2, textAlign: 'center' }}>\n          Selected Algorithm: {ALGORITHMS[selectedAlgorithm].name}\n        </Typography>\n      </StyledContainer>\n    </>\n  );\n}\n\nexport default SortingVisualizer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}