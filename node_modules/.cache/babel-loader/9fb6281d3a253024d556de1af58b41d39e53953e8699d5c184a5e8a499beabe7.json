{"ast":null,"code":"class AudioManager{constructor(){this.audioContext=null;this.gainNode=null;this.oscillator=null;this.isMuted=true;}initialize(){if(!this.audioContext){this.audioContext=new(window.AudioContext||window.webkitAudioContext)();this.gainNode=this.audioContext.createGain();this.gainNode.connect(this.audioContext.destination);this.setVolume(0.1);// Set initial volume\n}}playNote(value){if(this.isMuted)return;this.initialize();// Stop previous oscillator if it exists\nif(this.oscillator){this.oscillator.stop();this.oscillator.disconnect();}// Create and configure oscillator\nthis.oscillator=this.audioContext.createOscillator();this.oscillator.connect(this.gainNode);// Map array value to frequency (between 220Hz and 880Hz)\nconst frequency=220+value*3;this.oscillator.frequency.setValueAtTime(frequency,this.audioContext.currentTime);// Use sine wave for a more melodic sound\nthis.oscillator.type='sine';// Start the oscillator\nthis.oscillator.start();// Stop the oscillator after a short duration\nthis.oscillator.stop(this.audioContext.currentTime+0.1);}toggle(){this.isMuted=!this.isMuted;if(!this.isMuted){this.initialize();}return!this.isMuted;}setVolume(value){if(this.gainNode){this.gainNode.gain.setValueAtTime(value,this.audioContext.currentTime);}}}export const audioManager=new AudioManager();","map":{"version":3,"names":["AudioManager","constructor","audioContext","gainNode","oscillator","isMuted","initialize","window","AudioContext","webkitAudioContext","createGain","connect","destination","setVolume","playNote","value","stop","disconnect","createOscillator","frequency","setValueAtTime","currentTime","type","start","toggle","gain","audioManager"],"sources":["C:/Users/hp/DS/Downloads/Final/src/utils/audioContext.js"],"sourcesContent":["class AudioManager {\n    constructor() {\n        this.audioContext = null;\n        this.gainNode = null;\n        this.oscillator = null;\n        this.isMuted = true;\n    }\n\n    initialize() {\n        if (!this.audioContext) {\n            this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n            this.gainNode = this.audioContext.createGain();\n            this.gainNode.connect(this.audioContext.destination);\n            this.setVolume(0.1); // Set initial volume\n        }\n    }\n\n    playNote(value) {\n        if (this.isMuted) return;\n        \n        this.initialize();\n\n        // Stop previous oscillator if it exists\n        if (this.oscillator) {\n            this.oscillator.stop();\n            this.oscillator.disconnect();\n        }\n\n        // Create and configure oscillator\n        this.oscillator = this.audioContext.createOscillator();\n        this.oscillator.connect(this.gainNode);\n\n        // Map array value to frequency (between 220Hz and 880Hz)\n        const frequency = 220 + (value * 3);\n        this.oscillator.frequency.setValueAtTime(frequency, this.audioContext.currentTime);\n\n        // Use sine wave for a more melodic sound\n        this.oscillator.type = 'sine';\n\n        // Start the oscillator\n        this.oscillator.start();\n\n        // Stop the oscillator after a short duration\n        this.oscillator.stop(this.audioContext.currentTime + 0.1);\n    }\n\n    toggle() {\n        this.isMuted = !this.isMuted;\n        if (!this.isMuted) {\n            this.initialize();\n        }\n        return !this.isMuted;\n    }\n\n    setVolume(value) {\n        if (this.gainNode) {\n            this.gainNode.gain.setValueAtTime(value, this.audioContext.currentTime);\n        }\n    }\n}\n\nexport const audioManager = new AudioManager();\n"],"mappings":"AAAA,KAAM,CAAAA,YAAa,CACfC,WAAWA,CAAA,CAAG,CACV,IAAI,CAACC,YAAY,CAAG,IAAI,CACxB,IAAI,CAACC,QAAQ,CAAG,IAAI,CACpB,IAAI,CAACC,UAAU,CAAG,IAAI,CACtB,IAAI,CAACC,OAAO,CAAG,IAAI,CACvB,CAEAC,UAAUA,CAAA,CAAG,CACT,GAAI,CAAC,IAAI,CAACJ,YAAY,CAAE,CACpB,IAAI,CAACA,YAAY,CAAG,IAAKK,MAAM,CAACC,YAAY,EAAID,MAAM,CAACE,kBAAkB,EAAE,CAAC,CAC5E,IAAI,CAACN,QAAQ,CAAG,IAAI,CAACD,YAAY,CAACQ,UAAU,CAAC,CAAC,CAC9C,IAAI,CAACP,QAAQ,CAACQ,OAAO,CAAC,IAAI,CAACT,YAAY,CAACU,WAAW,CAAC,CACpD,IAAI,CAACC,SAAS,CAAC,GAAG,CAAC,CAAE;AACzB,CACJ,CAEAC,QAAQA,CAACC,KAAK,CAAE,CACZ,GAAI,IAAI,CAACV,OAAO,CAAE,OAElB,IAAI,CAACC,UAAU,CAAC,CAAC,CAEjB;AACA,GAAI,IAAI,CAACF,UAAU,CAAE,CACjB,IAAI,CAACA,UAAU,CAACY,IAAI,CAAC,CAAC,CACtB,IAAI,CAACZ,UAAU,CAACa,UAAU,CAAC,CAAC,CAChC,CAEA;AACA,IAAI,CAACb,UAAU,CAAG,IAAI,CAACF,YAAY,CAACgB,gBAAgB,CAAC,CAAC,CACtD,IAAI,CAACd,UAAU,CAACO,OAAO,CAAC,IAAI,CAACR,QAAQ,CAAC,CAEtC;AACA,KAAM,CAAAgB,SAAS,CAAG,GAAG,CAAIJ,KAAK,CAAG,CAAE,CACnC,IAAI,CAACX,UAAU,CAACe,SAAS,CAACC,cAAc,CAACD,SAAS,CAAE,IAAI,CAACjB,YAAY,CAACmB,WAAW,CAAC,CAElF;AACA,IAAI,CAACjB,UAAU,CAACkB,IAAI,CAAG,MAAM,CAE7B;AACA,IAAI,CAAClB,UAAU,CAACmB,KAAK,CAAC,CAAC,CAEvB;AACA,IAAI,CAACnB,UAAU,CAACY,IAAI,CAAC,IAAI,CAACd,YAAY,CAACmB,WAAW,CAAG,GAAG,CAAC,CAC7D,CAEAG,MAAMA,CAAA,CAAG,CACL,IAAI,CAACnB,OAAO,CAAG,CAAC,IAAI,CAACA,OAAO,CAC5B,GAAI,CAAC,IAAI,CAACA,OAAO,CAAE,CACf,IAAI,CAACC,UAAU,CAAC,CAAC,CACrB,CACA,MAAO,CAAC,IAAI,CAACD,OAAO,CACxB,CAEAQ,SAASA,CAACE,KAAK,CAAE,CACb,GAAI,IAAI,CAACZ,QAAQ,CAAE,CACf,IAAI,CAACA,QAAQ,CAACsB,IAAI,CAACL,cAAc,CAACL,KAAK,CAAE,IAAI,CAACb,YAAY,CAACmB,WAAW,CAAC,CAC3E,CACJ,CACJ,CAEA,MAAO,MAAM,CAAAK,YAAY,CAAG,GAAI,CAAA1B,YAAY,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}